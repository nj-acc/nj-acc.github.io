{"version":3,"sources":["router/routes.js","router/index.js","redux/util.js"],"names":["Routes","path","type","component","lazy","HomePage","Router","FinalRoute","props","route","console","log","isUserLoggedIn","to","exact","render","routes","paths","map","push","routesAndPaths","routerProps","Object","assign","meta","fallback","ResolveRoutes","localStorage","getItem"],"mappings":"yIACMA,EAAS,CACX,CACEC,KAAM,SACNC,KAAK,UACLC,UAAWC,gBAAK,kBAAM,+DACtB,CACAH,KAAM,YACNC,KAAK,UACLC,UAAWC,gBAAK,kBAAM,+DACtB,CACAH,KAAM,WACNC,KAAK,UACLC,UAAWC,gBAAK,kBAAM,mCACtB,CACAH,KAAM,WACNC,KAAK,UACLC,UAAWC,gBAAK,kBAAM,mCACtB,CACAH,KAAM,YACNC,KAAK,UACLC,UAAWC,gBAAK,kBAAM,oC,eChBtBC,EAAWD,gBAAK,kBAAI,uDAoEXE,UAlEA,WACX,IAeMC,EAAa,SAAAC,GACf,IAAMC,EAAQD,EAAMC,MAOpB,OANAC,QAAQC,IAAIF,GAMM,YAAdA,EAAMP,MAAmBU,cAClB,cAAC,IAAD,CAAUC,GAAG,MACC,SAAdJ,EAAMP,MAAmBU,cAG7B,cAACH,EAAMN,UAAP,eAAqBK,IAFjB,cAAC,IAAD,CAAUK,GAAG,YA2B5B,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACb,KAAM,IAAKc,OAAQ,SAAAP,GAAK,OAAG,cAACH,EAAD,OAzB9B,WAClB,MAhCmB,WACnB,IAAMW,EAAS,GACTC,EAAQ,GAUd,OARIjB,GACAA,EAAOkB,KAAI,SAAAT,GAGP,OAFAO,EAAOG,KAAKV,GACZQ,EAAME,KAAKV,EAAMR,MACT,gCAIT,CAAEe,SAAQC,SAoBSG,GAAlBJ,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MACVI,EAAc,GAEpB,OACI,cAAC,IAAD,CAAOpB,KAAMgB,EAAb,SACI,cAAC,IAAD,UACCD,EAAOE,KAAI,SAAAT,GACR,OACA,cAAC,IAAD,CAAwBR,KAAMQ,EAAMR,KAAMa,OAAuB,IAAhBL,EAAMK,MAAgBC,OAAQ,SAAAP,GAE3E,OADAc,OAAOC,OAAOF,EAAdC,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAAgCd,GAAhC,IAAuCgB,KAAMf,EAAMe,QAEnD,cAAC,WAAD,CAAUC,SAAU,KAApB,SACI,cAAClB,EAAD,aAAYE,MAAOA,GAAWD,QAJ1BC,EAAMR,aAiBrByB,GACD,cAAC,IAAD,CAAOZ,OAAK,EAACb,KAAM,IAAKc,OAAQ,SAAAP,GAAK,OAAG,qD,gCClExD,kCAIO,IAAMI,EAAiB,kBAAMe,aAAaC,QAAQ","file":"static/js/9.2f267f84.chunk.js","sourcesContent":["import { lazy } from 'react'\r\nconst Routes = [\r\n    {\r\n      path: '/login',\r\n      type:'UN_AUTH',\r\n      component: lazy(() => import('../page/auth/login'))\r\n    },{\r\n      path: '/register',\r\n      type:'UN_AUTH',\r\n      component: lazy(() => import('../page/auth/register'))\r\n    },{\r\n      path: '/aboutus',\r\n      type:'UN_AUTH',\r\n      component: lazy(() => import('../page/home/aboutUs'))\r\n    },{\r\n      path: '/members',\r\n      type:'UN_AUTH',\r\n      component: lazy(() => import('../page/home/members'))\r\n    },{\r\n      path: '/projects',\r\n      type:'UN_AUTH',\r\n      component: lazy(() => import('../page/home/projects'))\r\n    }\r\n]\r\n\r\nexport {Routes}","import { Suspense, lazy } from 'react'\r\nimport { BrowserRouter as AppRouter, Route, Switch ,Redirect} from 'react-router-dom'\r\n\r\nimport {Routes} from './routes'\r\nimport {isUserLoggedIn} from '../redux/util'\r\nconst HomePage = lazy(()=>import('../page/home/index'))\r\n\r\nconst Router = () => {\r\n    const routesAndPaths = () => {\r\n        const routes = []\r\n        const paths = []\r\n\r\n        if (Routes) {\r\n            Routes.map(route => {\r\n                routes.push(route)\r\n                paths.push(route.path)\r\n                return (<></>);\r\n            })\r\n        }\r\n    \r\n        return { routes, paths }\r\n    }\r\n\r\n    const FinalRoute = props => {\r\n        const route = props.route\r\n        console.log(route)\r\n        // let action, resource\r\n        // if (route.meta) {\r\n        //     action = route.meta.action ? route.meta.action : null\r\n        //     resource = route.meta.resource ? route.meta.resource : null\r\n        // }\r\n        if (route.type ==='UN_AUTH'&&isUserLoggedIn()) {\r\n            return <Redirect to='/' />\r\n        } else if (route.type ==='AUTH' && !isUserLoggedIn()) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        return <route.component {...props} />\r\n    }\r\n\r\n    const ResolveRoutes = () => {\r\n        const { routes, paths } = routesAndPaths()\r\n        const routerProps = {}\r\n\r\n        return(\r\n            <Route path={paths} >\r\n                <Switch>\r\n                {routes.map(route => {\r\n                    return (\r\n                    <Route key={route.path} path={route.path} exact={route.exact === true} render={props => {\r\n                        Object.assign(routerProps, { ...props, meta: route.meta })\r\n                        return (\r\n                        <Suspense fallback={null}>\r\n                            <FinalRoute route={route} {...props} />\r\n                        </Suspense>)}} \r\n                    />)\r\n                })}\r\n                </Switch>\r\n            </Route>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <AppRouter>\r\n            <Switch>\r\n                <Route exact path={'/'} render={props=>(<HomePage/>)} />\r\n                {ResolveRoutes()}\r\n                <Route exact path={'*'} render={props=>(<>404</>)} />\r\n            </Switch>\r\n        </AppRouter>\r\n\r\n    )\r\n\r\n}\r\nexport default Router","// import {auth} from \"../firebase/index\";\r\n\r\n\r\n\r\nexport const isUserLoggedIn = () => localStorage.getItem('token')\r\n\r\n   "],"sourceRoot":""}